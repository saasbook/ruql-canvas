q
qq=JSON.parse(r.body)
r=@canvas.get("courses/#{@course_id}/quizzes/#{@quiz_id}/questions")
qq.length
qq[3]
qq[2]
qq[1]
qq[0]
qq[0].answers
qq=JSON.parse(r.body)
r.body
r=@canvas.get("courses/#{@course_id}/quizzes/#{@quiz_id}/questions")
c
p @response.status
q
p @response.success?
j=JSON.parse @response.body
c
n
q
j=JSON.parse(resp.body)
n
q
p resp.body
p qz.response.status
n
q=qz.genq
p q
q
c
continue
p qz.response.status
p resp.status
n
p q
n
c
n
q[:question][:position]=1
p q
n
c
p @current_group_id
n
q
p question
p q
p @response.status
c
@current_group_id =1168455
@current_group_id 1168455
n
j['quiz_groups'][0]['id']
j=JSON.parse(@response.body)
p @response.status
n
continue
p @response
n
c
p q
p @response.status
c
p @response.status
n
group ={:quiz_groups => [{:question_points=>1, :pick_count=>1, :name=>"group:0"}]}
group
Q.quiz_id
Q.create_quiz(description: "Quiz 2")
Q.create_quiz
group.to_json
p group.to_json
p group
p gorup
q
@canvas
p @quiz_id
p @course_id
p group.to_json
p @response.reason_phrase
q
j['id']
j=JSON.parse(resp.body)
p resp.body
continue
p new_quiz.reason_phrase
p new_quiz.status
p new_quiz.errors
n
continue
r=canvas.get "courses/#{COURSE}.json"
r=canvas.get "/courses/#{COURSE}.json"
canvas.url_prefix
p canvas.base
p canvas.url
p conn.base
q
r=canvas.get "/courses/#{COURSE}.json"
continue
canvas.headers
r=canvas.get "/courses/#{COURSE}.json"
r.headers['location']
r.headers.keys
r.headers.keyse
r.headers
r=canvas.get "/courses/#{COURSE}/"
canvas.get "/courses/#{COURSE}/"
canvas.get "/courses/#{COURSE}"
n
p quiz
